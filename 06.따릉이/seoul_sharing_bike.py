# -*- coding: utf-8 -*-
"""FastCampus.ipynb

Automatically generated by Colaboratory.

Original file is run in https://colab.research.google.com/
To run this code, 3 csv files ('공공자전거 대여소 정보(21.01.31 기준).csv', '공공자전거 대여소별 이용정보_2020.07_2021.01.csv', '공공자전거 이용정보(시간대별)_21.01.csv'), 
and 1 json file (skorea_municipalities_geo_simple.json) need to be uploaded in colab's repository path '/content'.
"""

!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

import math
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

plt.style.use('seaborn')
sns.set(font_scale=1)
plt.rc('font', family='NanumBarunGothic')
plt.rcParams['font.family'] = 'NanumGothic'

import warnings
warnings.simplefilter(action='ignore', category=FutureWarning)


bike1=pd.read_csv('/content/공공자전거 대여소 정보(21.01.31 기준).csv', encoding='cp949')
bike2=pd.read_csv('/content/공공자전거 대여소별 이용정보_2020.07_2021.01.csv', encoding='cp949')
bike3=pd.read_csv('/content/공공자전거 이용정보(시간대별)_21.01.csv', encoding='cp949')

bike1.columns=['대여소번호', '대여소명', '자치구', '상세주소', '위도', '경도', '설치시기', '거치대수lcd',
       '거치대수qr', '운영방식']

bike2.columns=['대여소명', '대여일자/월', '대여건수']

bike1 = bike1.drop(['상세주소', '위도', '경도'], axis=1)

bike1['거치대수lcd']=bike1['거치대수lcd'].fillna(0)
bike1['거치대수qr']=bike1['거치대수qr'].fillna(0)

bike3['대여소명']=bike3['대여소명'].str.split('.', expand=True)[1]

bike2['대여소명']=bike2['대여소명'].str.split('.', expand=True)[1]

bike22=bike2.dropna(subset=['대여소명'])
bike33=bike3.dropna(subset=['대여소명'])

bike3['성별'].unique()

bike3['성별'][bike3['성별']=='f'] ='F'
bike3['성별'][bike3['성별']=='m'] ='M'

bike3['성별'].unique()

bike1['대여소번호'].dtypes

bike1['대여소번호']=bike1['대여소번호'].astype(object)

bike3['운동량'][bike3['운동량']==r'\N']=-1
bike3['탄소량'][bike3['탄소량']==r'\N']=-1

bike3['운동량']=pd.to_numeric(bike3['운동량'])
bike3['탄소량']=pd.to_numeric(bike3['탄소량'])

bike3['대여일자']=pd.to_datetime(bike3['대여일자'])

bike3.groupby(['대여소명'])['이동거리'].mean().reset_index().sort_values(by='이동거리', ascending=False).head(10)

bike3.groupby(['대여소명'])['사용시간'].mean().reset_index().sort_values(by='사용시간', ascending=False).head(10)

bike3.info()

f, ax = plt.subplots(1, 2, figsize=(18, 8))

sns.scatterplot(data=bike3, x='이동거리', y='운동량', ax=ax[0], hue='성별')
ax[0].set_xlim(-10000, 150000) # 데이터를 좀 더 잘보이게 그래프 개선
ax[0].set_title('degree of exercise per distance according to gender')

sns.scatterplot(data=bike3, x='이동거리', y='운동량', ax=ax[1], hue='연령대코드')
ax[1].set_title('degree of exercise per distance according to age band')
plt.show()

bike3['대여년'] = bike3['대여일자'].dt.year
bike3['대여월'] = bike3['대여일자'].dt.month
bike3['대여일'] = bike3['대여일자'].dt.day

bike3

bike_fm = bike3.pivot_table(index=bike3['대여일'], columns=bike3['성별'], values='사용시간', aggfunc=sum)
bike_fm.plot(title='(21.January) used hours per day according to gender', rot=0)

bike1

bike1['총거치대수'] = bike1['거치대수lcd']+bike1['거치대수qr']

bike_sum1 = bike1.groupby(['자치구'])['총거치대수'].sum().reset_index()
bike_sum1 = bike_sum1.set_index('자치구')
bike_sum1

import json
import folium
import warnings

#skorea_municipalities_geo_simple.json을 업로드 해야한다!
geo_path = '/content/skorea_municipalities_geo_simple.json'
geo_str = json.load(open(geo_path, encoding='utf-8'))

geo_str

seoul_bike1 = folium.Map(location = [37.5502, 126.982], zoom_start=11, tiles='Stamen Toner')

seoul_bike1.choropleth(
      geo_data = geo_str, data = bike_sum1['총거치대수'], columns = ['자치구', '총거치대수'], fill_color = 'YlGnBu', key_on =  'feature.properties.name', legend_name = 'Number of Parking lots (%)' 
)
seoul_bike1

bike1.info()

bike1['대여소번호']=pd.to_numeric(bike1['대여소번호'])
bike_merge = pd.merge(bike1, bike22, left_on='대여소명', right_on='대여소명')

bike_merge.head()

bike_merge = bike_merge.drop(['설치시기', '대여소명'], axis=1, inplace=False)

bike_merge01 = bike_merge[bike_merge['대여일자/월'] == 202101]

bike_merge01.head(5)

bike_sum2 = bike_merge01.groupby(['자치구'])['대여건수'].sum().reset_index()
bike_sum2 = bike_sum2.set_index('자치구')

bike_sum2

seoul_bike2 = folium.Map(location = [37.5502, 126.982], zoom_start = 11, tiles = 'openstreetmap')
seoul_bike2.choropleth(geo_data = geo_str, data = bike_sum2['대여건수'], columns = [bike_sum2.index, bike_sum2['대여건수']], fill_color = 'PuRd', key_on = 'feature.properties.name')
seoul_bike2
