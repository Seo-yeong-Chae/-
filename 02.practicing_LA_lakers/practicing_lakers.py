# -*- coding: utf-8 -*-
"""
Automatically generated by Colaboratory.

This code needs to be run in 'https://colab.research.google.com/' and upload Lakers.csv in colab repository '/content/'
"""

import math
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

lakers = pd.read_csv('/content/Lakers.csv')

lakers.info()

lakers.tail()

print('Opponent: ', lakers['opponent'].unique())
print('Game type: ', lakers['game_type'].unique())
print('Period: ', lakers['period'].unique())
print('Etype: ', lakers['etype'].unique())
print('Team: ', lakers['team'].unique())
print('Result: ', lakers['result'].unique())
print('Points: ', lakers['points'].unique())
print('Type: ', lakers['type'].unique())

print('총 데이터 개수: ', lakers.shape[0]*lakers.shape[1])
print('총 결측치 수: {} = 전체 데이터의 {:.2f}%'.format(lakers.isnull().sum().sum(), (lakers.isnull().sum().sum()*100)/(lakers.shape[0]*lakers.shape[1])))
print('LA 레이커스와 경기한 팀의 수: ', lakers['opponent'].nunique())
print('경기에 등장하는 행동 수: ', lakers['etype'].nunique())
print('경기에 등장하는 세부 행동 수: ', lakers['type'].nunique())

lakers['date']=lakers['date'].apply(str)
lakers['datetime']=lakers['date']+' '+lakers['time']
lakers['datetime']=pd.to_datetime(lakers['datetime'])
lakers.head()

lakers.isnull().any(axis=0)

print(lakers.index[lakers['x']==0].tolist())
print(lakers.index[lakers['y']==0].tolist())

lakers[['datetime','game_type']].groupby(['datetime', 'game_type']).sum()

df1=lakers.drop_duplicates(['datetime'], keep='first')
print(df1)

f, ax = plt.subplots(1, 2, figsize=(18, 8))

df1['game_type'].value_counts().plot.pie(explode=[0, 0.1], autopct='%0.1f%%', ax=ax[0], shadow=True)
ax[0].set_title('Pie plot: home vs away', size=15)
ax[0].set_ylabel('')

sns.countplot(x=df1['game_type'], ax=ax[1])
ax[1].set_title('Count plot: home vs away', size=15)

plt.show()

f2, ax2 = plt.subplots(1, 1, figsize=(14, 6))

sns.countplot(y=lakers['etype'], ax= ax2)
ax2.set_title('number of the action type occurrences', size=24)
ax2.set_ylabel('')

plt.show()

df2 = lakers.groupby(['etype','period']).size().reset_index().pivot(columns='period', index='etype', values=0)
print(df2)

df2.plot(kind='bar', stacked=True, figsize=(18, 6))
plt.title('Number of the action occurrences per quarter', size=24)
plt.xticks(rotation=0)

plt.show()

made = lakers['result'].isin(['made'])
lakers[made].head()

df3 = lakers[made][['date', 'team', 'points']].groupby(['date', 'team'], as_index=True).sum()
df3

df3.reset_index(inplace=True)
df3
lal = df3[df3['team'] == 'LAL']
opp = df3[df3['team'] != 'LAL']
df4 = pd.merge(lal, opp, on='date') 
df4

win=df4[df4['points_x']>df4['points_y']]
draw=df4[df4['points_x']==df4['points_y']]
lose=df4[df4['points_x']<df4['points_y']]

plt.figure(figsize=(26, 10))

plt.title("08-09 Season : LA Lakers performance", fontsize=15)

plt.plot(lal['date'], lal['points'], "-", alpha=1, color='orange', label='LA Lakers')
plt.plot(opp['date'], opp['points'], "--", alpha=6, color='green', label='Opposite team')

plt.plot(win['date'], win['points_x'], 'o', alpha=6, color='red')
plt.plot(lose['date'], lose['points_x'], 'o', alpha=6, color='blue')

plt.legend(loc='upper left', borderaxespad=0, fontsize=13)
plt.xticks(rotation=45)

plt.show()

lal2=lakers[lakers['team']=='LAL']
sns.set_style('whitegrid')
f3, ax3 = plt.subplots(1, 2, figsize=(15, 8), dpi=80)

g1 = sns.scatterplot(data=lal2, x='x',y='y', hue='result', alpha=0.3, palette='Paired', ax=ax3[0])
g2 = sns.kdeplot(data=lal2, x='x', y='y', hue='result', palette='Paired', ax=ax3[0])

g3 = sns.scatterplot(data=lal2, x='x', y='y', hue='points', alpha=0.3, palette='Set3', ax=ax3[1])
g4 = sns.kdeplot(data=lal2, x='x', y='y', hue='points', palette='Set3', ax=ax3[1])
plt.show()

lal3=lal2[lal2['type'].isin(lal2['type'].value_counts().head(10).index)]

sns.set_style('darkgrid')
f4, ax4 = plt.subplots(1, 1, figsize= (6, 8), dpi=80)

sns.scatterplot(data=lal3, x='x', y='y', hue=lal3['type'], palette='Set3', ax=ax4)

ax4.legend(title="Type", bbox_to_anchor=(1.34, 1))

plt.show()
